{"message":"unresolved import `secret_toolkit::crypto`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/viewing_key.rs","byte_start":122,"byte_end":128,"line_start":7,"line_end":7,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"use secret_toolkit::crypto::{sha_256, Prng}; /*Safe to have two secret_toolkit imports inside of cargo.toml? */","highlight_start":21,"highlight_end":27}],"label":"could not find `crypto` in `secret_toolkit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `secret_toolkit::crypto`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/viewing_key.rs:7:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse secret_toolkit::crypto::{sha_256, Prng}; /*Safe to have two secret_toolkit imports inside of cargo.toml? */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `crypto` in `secret_toolkit`\u001b[0m\n\n"}
{"message":"unresolved import `sha2`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/utils.rs","byte_start":46,"byte_end":50,"line_start":2,"line_end":2,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"use sha2::{Digest, Sha256};","highlight_start":5,"highlight_end":9}],"label":"use of undeclared crate or module `sha2`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `sha2`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse sha2::{Digest, Sha256};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `sha2`\u001b[0m\n\n"}
{"message":"unresolved import `subtle`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/utils.rs","byte_start":101,"byte_end":107,"line_start":4,"line_end":4,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use subtle::ConstantTimeEq;","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `subtle`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `subtle`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse subtle::ConstantTimeEq;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `subtle`\u001b[0m\n\n"}
{"message":"unresolved import `crate::msg::fileResponse`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":65,"byte_end":77,"line_start":3,"line_end":3,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":38,"highlight_end":50}],"label":"no `fileResponse` in `msg`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":65,"byte_end":77,"line_start":3,"line_end":3,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":38,"highlight_end":50}],"label":null,"suggested_replacement":"FileResponse","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::msg::fileResponse`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:3:38\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `fileResponse` in `msg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module (notice the capitalization): `FileResponse`\u001b[0m\n\n"}
{"message":"unresolved import `crate::msg::fileResponse`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":2869,"byte_end":2881,"line_start":96,"line_end":96,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    use crate::msg::{fileResponse, HandleAnswer, self, /*WalletInfoResponse*/};","highlight_start":22,"highlight_end":34}],"label":"no `fileResponse` in `msg`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":2869,"byte_end":2881,"line_start":96,"line_end":96,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    use crate::msg::{fileResponse, HandleAnswer, self, /*WalletInfoResponse*/};","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":"FileResponse","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::msg::fileResponse`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:96:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    use crate::msg::{fileResponse, HandleAnswer, self, /*WalletInfoResponse*/};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `fileResponse` in `msg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module (notice the capitalization): `FileResponse`\u001b[0m\n\n"}
{"message":"unresolved import `crate::msg::fileResponse`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/backend.rs","byte_start":65,"byte_end":77,"line_start":3,"line_end":3,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":38,"highlight_end":50}],"label":"no `fileResponse` in `msg`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src/backend.rs","byte_start":65,"byte_end":77,"line_start":3,"line_end":3,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":38,"highlight_end":50}],"label":null,"suggested_replacement":"FileResponse","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::msg::fileResponse`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/backend.rs:3:38\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `fileResponse` in `msg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module (notice the capitalization): `FileResponse`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `base64`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/viewing_key.rs","byte_start":1397,"byte_end":1403,"line_start":39,"line_end":39,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"        Self(VIEWING_KEY_PREFIX.to_string() + &base64::encode(key))","highlight_start":48,"highlight_end":54}],"label":"use of undeclared crate or module `base64`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `base64`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/viewing_key.rs:39:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Self(VIEWING_KEY_PREFIX.to_string() + &base64::encode(key))\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `base64`\u001b[0m\n\n"}
{"message":"unused import: `std::convert::TryInto`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":4,"byte_end":25,"line_start":1,"line_end":1,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::convert::TryInto`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::convert::TryInto;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `ViewingPermissions`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":89,"byte_end":107,"line_start":3,"line_end":3,"column_start":62,"column_end":80,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":62,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":87,"byte_end":107,"line_start":3,"line_end":3,"column_start":60,"column_end":80,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":60,"highlight_end":80}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ViewingPermissions`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:3:62\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `PREFIX_MSGS`, `append_file`, `create_empty_collection`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":137,"byte_end":148,"line_start":4,"line_end":4,"column_start":28,"column_end":39,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":28,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":150,"byte_end":173,"line_start":4,"line_end":4,"column_start":41,"column_end":64,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":41,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":207,"byte_end":218,"line_start":4,"line_end":4,"column_start":98,"column_end":109,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":98,"highlight_end":109}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":135,"byte_end":173,"line_start":4,"line_end":4,"column_start":26,"column_end":64,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":26,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract.rs","byte_start":186,"byte_end":218,"line_start":4,"line_end":4,"column_start":77,"column_end":109,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":77,"highlight_end":109}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `PREFIX_MSGS`, `append_file`, `create_empty_collection`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:4:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `ReadonlyStorage`, `StdError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":393,"byte_end":401,"line_start":9,"line_end":9,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"    Querier, StdError, StdResult, Storage, ReadonlyStorage,","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":423,"byte_end":438,"line_start":9,"line_end":9,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"    Querier, StdError, StdResult, Storage, ReadonlyStorage,","highlight_start":44,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":391,"byte_end":401,"line_start":9,"line_end":9,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    Querier, StdError, StdResult, Storage, ReadonlyStorage,","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract.rs","byte_start":421,"byte_end":438,"line_start":9,"line_end":9,"column_start":42,"column_end":59,"is_primary":true,"text":[{"text":"    Querier, StdError, StdResult, Storage, ReadonlyStorage,","highlight_start":42,"highlight_end":59}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ReadonlyStorage`, `StdError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:9:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Querier, StdError, StdResult, Storage, ReadonlyStorage,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `PrefixedStorage`, `ReadonlyPrefixedStorage`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":467,"byte_end":490,"line_start":12,"line_end":12,"column_start":24,"column_end":47,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{ReadonlyPrefixedStorage, PrefixedStorage};","highlight_start":24,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":492,"byte_end":507,"line_start":12,"line_end":12,"column_start":49,"column_end":64,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{ReadonlyPrefixedStorage, PrefixedStorage};","highlight_start":49,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":444,"byte_end":509,"line_start":12,"line_end":12,"column_start":1,"column_end":66,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{ReadonlyPrefixedStorage, PrefixedStorage};","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `PrefixedStorage`, `ReadonlyPrefixedStorage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:12:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse cosmwasm_storage::{ReadonlyPrefixedStorage, PrefixedStorage};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `AppendStoreMut`, `AppendStore`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":540,"byte_end":551,"line_start":13,"line_end":13,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"use secret_toolkit::storage::{AppendStore, AppendStoreMut};","highlight_start":31,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":553,"byte_end":567,"line_start":13,"line_end":13,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"use secret_toolkit::storage::{AppendStore, AppendStoreMut};","highlight_start":44,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":510,"byte_end":569,"line_start":13,"line_end":13,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"use secret_toolkit::storage::{AppendStore, AppendStoreMut};","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `AppendStoreMut`, `AppendStore`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:13:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse secret_toolkit::storage::{AppendStore, AppendStoreMut};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `MockStorage`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":2703,"byte_end":2714,"line_start":93,"line_end":93,"column_start":62,"column_end":73,"is_primary":true,"text":[{"text":"    use cosmwasm_std::testing::{mock_dependencies, mock_env, MockStorage};","highlight_start":62,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":2701,"byte_end":2714,"line_start":93,"line_end":93,"column_start":60,"column_end":73,"is_primary":true,"text":[{"text":"    use cosmwasm_std::testing::{mock_dependencies, mock_env, MockStorage};","highlight_start":60,"highlight_end":73}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `MockStorage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:93:62\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    use cosmwasm_std::testing::{mock_dependencies, mock_env, MockStorage};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `ReadonlyStorage`, `from_binary`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":2747,"byte_end":2758,"line_start":94,"line_end":94,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"    use cosmwasm_std::{coins, from_binary, ReadonlyStorage};","highlight_start":31,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":2760,"byte_end":2775,"line_start":94,"line_end":94,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"    use cosmwasm_std::{coins, from_binary, ReadonlyStorage};","highlight_start":44,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":2745,"byte_end":2775,"line_start":94,"line_end":94,"column_start":29,"column_end":59,"is_primary":true,"text":[{"text":"    use cosmwasm_std::{coins, from_binary, ReadonlyStorage};","highlight_start":29,"highlight_end":59}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ReadonlyStorage`, `from_binary`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:94:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    use cosmwasm_std::{coins, from_binary, ReadonlyStorage};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `PrefixedStorage`, `ReadonlyPrefixedStorage`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":2805,"byte_end":2820,"line_start":95,"line_end":95,"column_start":28,"column_end":43,"is_primary":true,"text":[{"text":"    use cosmwasm_storage::{PrefixedStorage, ReadonlyPrefixedStorage};","highlight_start":28,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":2822,"byte_end":2845,"line_start":95,"line_end":95,"column_start":45,"column_end":68,"is_primary":true,"text":[{"text":"    use cosmwasm_storage::{PrefixedStorage, ReadonlyPrefixedStorage};","highlight_start":45,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":2782,"byte_end":2847,"line_start":95,"line_end":95,"column_start":5,"column_end":70,"is_primary":true,"text":[{"text":"    use cosmwasm_storage::{PrefixedStorage, ReadonlyPrefixedStorage};","highlight_start":5,"highlight_end":70}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `PrefixedStorage`, `ReadonlyPrefixedStorage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:95:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    use cosmwasm_storage::{PrefixedStorage, ReadonlyPrefixedStorage};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `HandleAnswer`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":2883,"byte_end":2895,"line_start":96,"line_end":96,"column_start":36,"column_end":48,"is_primary":true,"text":[{"text":"    use crate::msg::{fileResponse, HandleAnswer, self, /*WalletInfoResponse*/};","highlight_start":36,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":2897,"byte_end":2901,"line_start":96,"line_end":96,"column_start":50,"column_end":54,"is_primary":true,"text":[{"text":"    use crate::msg::{fileResponse, HandleAnswer, self, /*WalletInfoResponse*/};","highlight_start":50,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":2881,"byte_end":2901,"line_start":96,"line_end":96,"column_start":34,"column_end":54,"is_primary":true,"text":[{"text":"    use crate::msg::{fileResponse, HandleAnswer, self, /*WalletInfoResponse*/};","highlight_start":34,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `HandleAnswer`, `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:96:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    use crate::msg::{fileResponse, HandleAnswer, self, /*WalletInfoResponse*/};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::any::type_name`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/state.rs","byte_start":4,"byte_end":23,"line_start":1,"line_end":1,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use std::any::type_name;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/state.rs","byte_start":0,"byte_end":24,"line_start":1,"line_end":1,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"use std::any::type_name;","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::any::type_name`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::any::type_name;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::convert::TryInto`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/state.rs","byte_start":29,"byte_end":50,"line_start":2,"line_end":2,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/state.rs","byte_start":25,"byte_end":51,"line_start":2,"line_end":2,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::convert::TryInto`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::convert::TryInto;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Bincode2`, `Serde`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/state.rs","byte_start":434,"byte_end":442,"line_start":9,"line_end":9,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"use secret_toolkit::serialization::{Bincode2, Serde};","highlight_start":37,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":444,"byte_end":449,"line_start":9,"line_end":9,"column_start":47,"column_end":52,"is_primary":true,"text":[{"text":"use secret_toolkit::serialization::{Bincode2, Serde};","highlight_start":47,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/state.rs","byte_start":398,"byte_end":451,"line_start":9,"line_end":9,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"use secret_toolkit::serialization::{Bincode2, Serde};","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Bincode2`, `Serde`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:9:37\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse secret_toolkit::serialization::{Bincode2, Serde};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `serde::de::DeserializeOwned`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/state.rs","byte_start":456,"byte_end":483,"line_start":10,"line_end":10,"column_start":5,"column_end":32,"is_primary":true,"text":[{"text":"use serde::de::DeserializeOwned;","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/state.rs","byte_start":452,"byte_end":484,"line_start":10,"line_end":10,"column_start":1,"column_end":33,"is_primary":true,"text":[{"text":"use serde::de::DeserializeOwned;","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse serde::de::DeserializeOwned;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused doc comment","code":{"code":"unused_doc_comments","explanation":null},"level":"warning","spans":[{"file_name":"src/state.rs","byte_start":6076,"byte_end":6148,"line_start":142,"line_end":142,"column_start":5,"column_end":77,"is_primary":false,"text":[{"text":"    let store = AppendStoreMut::<File, _, _>::attach_or_create(&mut store)?;","highlight_start":5,"highlight_end":77}],"label":"rustdoc does not generate documentation for statements","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":5797,"byte_end":6071,"line_start":139,"line_end":141,"column_start":5,"column_end":93,"is_primary":true,"text":[{"text":"    /// Try to use the provided storage as an AppendStore. If it doesn't seem to be one, then","highlight_start":5,"highlight_end":94},{"text":"    /// initialize it as one. Returns Err if the contents of the storage can not be parsed.","highlight_start":1,"highlight_end":92},{"text":"    /// below used to be: let mut store, but warning during test told me to get rid of \"mut\"","highlight_start":1,"highlight_end":93}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_doc_comments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `//` for a plain comment","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused doc comment\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:139:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Try to use the provided storage as an AppendStore. If it doesn't seem to be one, then\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// initialize it as one. Returns Err if the contents of the storage can not be parsed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// below used to be: let mut store, but warning during test told me to get rid of \"mut\"\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|____________________________________________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m    let store = AppendStoreMut::<File, _, _>::attach_or_create(&mut store)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrustdoc does not generate documentation for statements\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_doc_comments)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: use `//` for a plain comment\u001b[0m\n\n"}
{"message":"unused imports: `HandleMsg`, `InitMsg`, `QueryMsg`, `ViewingPermissions`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/backend.rs","byte_start":45,"byte_end":54,"line_start":3,"line_end":3,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/backend.rs","byte_start":56,"byte_end":63,"line_start":3,"line_end":3,"column_start":29,"column_end":36,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":29,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/backend.rs","byte_start":79,"byte_end":87,"line_start":3,"line_end":3,"column_start":52,"column_end":60,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":52,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/backend.rs","byte_start":89,"byte_end":107,"line_start":3,"line_end":3,"column_start":62,"column_end":80,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":62,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/backend.rs","byte_start":45,"byte_end":65,"line_start":3,"line_end":3,"column_start":18,"column_end":38,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":18,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/backend.rs","byte_start":77,"byte_end":107,"line_start":3,"line_end":3,"column_start":50,"column_end":80,"is_primary":true,"text":[{"text":"use crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};","highlight_start":50,"highlight_end":80}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `HandleMsg`, `InitMsg`, `QueryMsg`, `ViewingPermissions`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/backend.rs:3:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::msg::{HandleMsg, InitMsg, fileResponse, QueryMsg, ViewingPermissions};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `State`, `config`, `create_empty_collection`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/backend.rs","byte_start":129,"byte_end":135,"line_start":4,"line_end":4,"column_start":20,"column_end":26,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":20,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/backend.rs","byte_start":150,"byte_end":173,"line_start":4,"line_end":4,"column_start":41,"column_end":64,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":41,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/backend.rs","byte_start":181,"byte_end":186,"line_start":4,"line_end":4,"column_start":72,"column_end":77,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":72,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/backend.rs","byte_start":129,"byte_end":137,"line_start":4,"line_end":4,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/backend.rs","byte_start":148,"byte_end":173,"line_start":4,"line_end":4,"column_start":39,"column_end":64,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":39,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/backend.rs","byte_start":179,"byte_end":186,"line_start":4,"line_end":4,"column_start":70,"column_end":77,"is_primary":true,"text":[{"text":"use crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};","highlight_start":70,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `State`, `config`, `create_empty_collection`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/backend.rs:4:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::state::{config, append_file, create_empty_collection, File, State, /*PERFIX_PERMITS*/ PREFIX_MSGS};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Binary`, `InitResponse`, `StdError`, `debug_print`, `to_binary`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/backend.rs","byte_start":245,"byte_end":256,"line_start":6,"line_end":6,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    debug_print, to_binary, Api, Binary, Env, Extern, HandleResponse, HumanAddr, InitResponse,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/backend.rs","byte_start":258,"byte_end":267,"line_start":6,"line_end":6,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"    debug_print, to_binary, Api, Binary, Env, Extern, HandleResponse, HumanAddr, InitResponse,","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/backend.rs","byte_start":274,"byte_end":280,"line_start":6,"line_end":6,"column_start":34,"column_end":40,"is_primary":true,"text":[{"text":"    debug_print, to_binary, Api, Binary, Env, Extern, HandleResponse, HumanAddr, InitResponse,","highlight_start":34,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/backend.rs","byte_start":322,"byte_end":334,"line_start":6,"line_end":6,"column_start":82,"column_end":94,"is_primary":true,"text":[{"text":"    debug_print, to_binary, Api, Binary, Env, Extern, HandleResponse, HumanAddr, InitResponse,","highlight_start":82,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/backend.rs","byte_start":349,"byte_end":357,"line_start":7,"line_end":7,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"    Querier, StdError, StdResult, Storage, ReadonlyStorage,","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/backend.rs","byte_start":245,"byte_end":269,"line_start":6,"line_end":6,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    debug_print, to_binary, Api, Binary, Env, Extern, HandleResponse, HumanAddr, InitResponse,","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/backend.rs","byte_start":272,"byte_end":280,"line_start":6,"line_end":6,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"    debug_print, to_binary, Api, Binary, Env, Extern, HandleResponse, HumanAddr, InitResponse,","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/backend.rs","byte_start":320,"byte_end":334,"line_start":6,"line_end":6,"column_start":80,"column_end":94,"is_primary":true,"text":[{"text":"    debug_print, to_binary, Api, Binary, Env, Extern, HandleResponse, HumanAddr, InitResponse,","highlight_start":80,"highlight_end":94}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/backend.rs","byte_start":347,"byte_end":357,"line_start":7,"line_end":7,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    Querier, StdError, StdResult, Storage, ReadonlyStorage,","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Binary`, `InitResponse`, `StdError`, `debug_print`, `to_binary`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/backend.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    debug_print, to_binary, Api, Binary, Env, Extern, HandleResponse, HumanAddr, InitResponse,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Querier, StdError, StdResult, Storage, ReadonlyStorage,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `PrefixedStorage`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/backend.rs","byte_start":448,"byte_end":463,"line_start":10,"line_end":10,"column_start":49,"column_end":64,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{ReadonlyPrefixedStorage, PrefixedStorage};","highlight_start":49,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/backend.rs","byte_start":446,"byte_end":463,"line_start":10,"line_end":10,"column_start":47,"column_end":64,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{ReadonlyPrefixedStorage, PrefixedStorage};","highlight_start":47,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `PrefixedStorage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/backend.rs:10:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse cosmwasm_storage::{ReadonlyPrefixedStorage, PrefixedStorage};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `AppendStoreMut`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/backend.rs","byte_start":509,"byte_end":523,"line_start":11,"line_end":11,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"use secret_toolkit::storage::{AppendStore, AppendStoreMut};","highlight_start":44,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/backend.rs","byte_start":507,"byte_end":523,"line_start":11,"line_end":11,"column_start":42,"column_end":58,"is_primary":true,"text":[{"text":"use secret_toolkit::storage::{AppendStore, AppendStoreMut};","highlight_start":42,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `AppendStoreMut`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/backend.rs:11:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse secret_toolkit::storage::{AppendStore, AppendStoreMut};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"missing field `prng_seed` in initializer of `state::State`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":728,"byte_end":733,"line_start":20,"line_end":20,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    let state = State {","highlight_start":17,"highlight_end":22}],"label":"missing `prng_seed`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m\u001b[1m: missing field `prng_seed` in initializer of `state::State`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:20:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let state = State {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `prng_seed`\u001b[0m\n\n"}
{"message":"no variant named `SetViewingKey` found for enum `msg::HandleMsg`","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/msg.rs","byte_start":429,"byte_end":447,"line_start":15,"line_end":15,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum HandleMsg {","highlight_start":1,"highlight_end":19}],"label":"variant `SetViewingKey` not found here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":1268,"byte_end":1281,"line_start":39,"line_end":39,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"        HandleMsg::SetViewingKey { key, padding } => todo!(),","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":1268,"byte_end":1281,"line_start":39,"line_end":39,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"        HandleMsg::SetViewingKey { key, padding } => todo!(),","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":"CreateViewingKey","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant named `SetViewingKey` found for enum `msg::HandleMsg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:39:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        HandleMsg::SetViewingKey { key, padding } => todo!(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: there is a variant with a similar name: `CreateViewingKey`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/msg.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum HandleMsg {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant `SetViewingKey` not found here\u001b[0m\n\n"}
{"message":"pattern does not mention field `entropy`","code":{"code":"E0027","explanation":"A pattern for a struct fails to specify a sub-pattern for every one of the\nstruct's fields.\n\nErroneous code example:\n\n```compile_fail,E0027\nstruct Dog {\n    name: String,\n    age: u32,\n}\n\nlet d = Dog { name: \"Rusty\".to_string(), age: 8 };\n\n// This is incorrect.\nmatch d {\n    Dog { age: x } => {}\n}\n```\n\nTo fix this error, ensure that each field from the struct's definition is\nmentioned in the pattern, or use `..` to ignore unwanted fields. Example:\n\n```\nstruct Dog {\n    name: String,\n    age: u32,\n}\n\nlet d = Dog { name: \"Rusty\".to_string(), age: 8 };\n\nmatch d {\n    Dog { name: ref n, age: x } => {}\n}\n\n// This is also correct (ignore unused fields).\nmatch d {\n    Dog { age: x, .. } => {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":1319,"byte_end":1344,"line_start":40,"line_end":40,"column_start":9,"column_end":34,"is_primary":true,"text":[{"text":"        HandleMsg::InitAddress {} => try_init(deps, env)","highlight_start":9,"highlight_end":34}],"label":"missing field `entropy`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"include the missing field in the pattern","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":1341,"byte_end":1344,"line_start":40,"line_end":40,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"        HandleMsg::InitAddress {} => try_init(deps, env)","highlight_start":31,"highlight_end":34}],"label":null,"suggested_replacement":" { entropy }","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"if you don't care about this missing field, you can explicitly ignore it","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":1341,"byte_end":1344,"line_start":40,"line_end":40,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"        HandleMsg::InitAddress {} => try_init(deps, env)","highlight_start":31,"highlight_end":34}],"label":null,"suggested_replacement":" { .. }","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0027]\u001b[0m\u001b[0m\u001b[1m: pattern does not mention field `entropy`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:40:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        HandleMsg::InitAddress {} => try_init(deps, env)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing field `entropy`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: include the missing field in the pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        HandleMsg::InitAddress\u001b[0m\u001b[0m\u001b[38;5;10m { entropy }\u001b[0m\u001b[0m => try_init(deps, env)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you don't care about this missing field, you can explicitly ignore it\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        HandleMsg::InitAddress\u001b[0m\u001b[0m\u001b[38;5;10m { .. }\u001b[0m\u001b[0m => try_init(deps, env)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"message":"missing field `prng_seed` in initializer of `msg::InitMsg`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":3114,"byte_end":3121,"line_start":104,"line_end":104,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"        let msg = InitMsg {owner: None};","highlight_start":19,"highlight_end":26}],"label":"missing `prng_seed`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m\u001b[1m: missing field `prng_seed` in initializer of `msg::InitMsg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:104:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let msg = InitMsg {owner: None};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `prng_seed`\u001b[0m\n\n"}
{"message":"missing field `entropy` in initializer of `msg::HandleMsg`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":3353,"byte_end":3375,"line_start":110,"line_end":110,"column_start":19,"column_end":41,"is_primary":true,"text":[{"text":"        let msg = HandleMsg::InitAddress {};","highlight_start":19,"highlight_end":41}],"label":"missing `entropy`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m\u001b[1m: missing field `entropy` in initializer of `msg::HandleMsg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:110:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let msg = HandleMsg::InitAddress {};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `entropy`\u001b[0m\n\n"}
{"message":"no method named `ct_eq` found for reference `&[u8]` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/utils.rs","byte_start":200,"byte_end":205,"line_start":7,"line_end":7,"column_start":19,"column_end":24,"is_primary":true,"text":[{"text":"    bool::from(s1.ct_eq(s2))","highlight_start":19,"highlight_end":24}],"label":"method not found in `&[u8]`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `ct_eq` found for reference `&[u8]` in the current scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils.rs:7:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    bool::from(s1.ct_eq(s2))\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&[u8]`\u001b[0m\n\n"}
{"message":"missing field `prng_seed` in initializer of `msg::InitMsg`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":3863,"byte_end":3870,"line_start":126,"line_end":126,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"        let msg = InitMsg {owner: None};","highlight_start":19,"highlight_end":26}],"label":"missing `prng_seed`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m\u001b[1m: missing field `prng_seed` in initializer of `msg::InitMsg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:126:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let msg = InitMsg {owner: None};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `prng_seed`\u001b[0m\n\n"}
{"message":"missing field `prng_seed` in initializer of `msg::InitMsg`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":4247,"byte_end":4254,"line_start":138,"line_end":138,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"        let msg = InitMsg { owner: None };","highlight_start":19,"highlight_end":26}],"label":"missing `prng_seed`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m\u001b[1m: missing field `prng_seed` in initializer of `msg::InitMsg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:138:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let msg = InitMsg { owner: None };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `prng_seed`\u001b[0m\n\n"}
{"message":"missing field `prng_seed` in initializer of `msg::InitMsg`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":6469,"byte_end":6476,"line_start":183,"line_end":183,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"        let msg = InitMsg { owner: None };","highlight_start":19,"highlight_end":26}],"label":"missing `prng_seed`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m\u001b[1m: missing field `prng_seed` in initializer of `msg::InitMsg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:183:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let msg = InitMsg { owner: None };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `prng_seed`\u001b[0m\n\n"}
{"message":"this function takes 4 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":6856,"byte_end":6883,"line_start":192,"line_end":192,"column_start":30,"column_end":57,"is_primary":false,"text":[{"text":"        let file = File::new(\"King_Pepe.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":30,"highlight_end":57}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":6885,"byte_end":6905,"line_start":192,"line_end":192,"column_start":59,"column_end":79,"is_primary":false,"text":[{"text":"        let file = File::new(\"King_Pepe.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":59,"highlight_end":79}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":6907,"byte_end":6912,"line_start":192,"line_end":192,"column_start":81,"column_end":86,"is_primary":false,"text":[{"text":"        let file = File::new(\"King_Pepe.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":81,"highlight_end":86}],"label":"supplied 3 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":6846,"byte_end":6855,"line_start":192,"line_end":192,"column_start":20,"column_end":29,"is_primary":true,"text":[{"text":"        let file = File::new(\"King_Pepe.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":20,"highlight_end":29}],"label":"expected 4 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/state.rs","byte_start":3409,"byte_end":3425,"line_start":71,"line_end":71,"column_start":16,"column_end":32,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":16,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3427,"byte_end":3440,"line_start":71,"line_end":71,"column_start":34,"column_end":47,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":34,"highlight_end":47}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3442,"byte_end":3454,"line_start":71,"line_end":71,"column_start":49,"column_end":61,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":49,"highlight_end":61}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3456,"byte_end":3468,"line_start":71,"line_end":71,"column_start":63,"column_end":75,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":63,"highlight_end":75}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3405,"byte_end":3408,"line_start":71,"line_end":71,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 4 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:192:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let file = File::new(\"King_Pepe.jpg\".to_string(), \"anyone\".to_string(), false);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 3 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 4 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:71:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\n\n"}
{"message":"this function takes 4 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":7021,"byte_end":7049,"line_start":195,"line_end":195,"column_start":31,"column_end":59,"is_primary":false,"text":[{"text":"        let file2 = File::new(\"Queen_Pepe.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":31,"highlight_end":59}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":7051,"byte_end":7071,"line_start":195,"line_end":195,"column_start":61,"column_end":81,"is_primary":false,"text":[{"text":"        let file2 = File::new(\"Queen_Pepe.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":61,"highlight_end":81}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":7073,"byte_end":7078,"line_start":195,"line_end":195,"column_start":83,"column_end":88,"is_primary":false,"text":[{"text":"        let file2 = File::new(\"Queen_Pepe.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":83,"highlight_end":88}],"label":"supplied 3 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":7011,"byte_end":7020,"line_start":195,"line_end":195,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        let file2 = File::new(\"Queen_Pepe.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":21,"highlight_end":30}],"label":"expected 4 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/state.rs","byte_start":3409,"byte_end":3425,"line_start":71,"line_end":71,"column_start":16,"column_end":32,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":16,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3427,"byte_end":3440,"line_start":71,"line_end":71,"column_start":34,"column_end":47,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":34,"highlight_end":47}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3442,"byte_end":3454,"line_start":71,"line_end":71,"column_start":49,"column_end":61,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":49,"highlight_end":61}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3456,"byte_end":3468,"line_start":71,"line_end":71,"column_start":63,"column_end":75,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":63,"highlight_end":75}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3405,"byte_end":3408,"line_start":71,"line_end":71,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 4 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:195:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let file2 = File::new(\"Queen_Pepe.jpg\".to_string(), \"anyone\".to_string(), false);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 3 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 4 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:71:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\n\n"}
{"message":"this function takes 4 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":7913,"byte_end":7937,"line_start":211,"line_end":211,"column_start":30,"column_end":54,"is_primary":false,"text":[{"text":"        let file = File::new(\"B_Coin.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":30,"highlight_end":54}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":7939,"byte_end":7959,"line_start":211,"line_end":211,"column_start":56,"column_end":76,"is_primary":false,"text":[{"text":"        let file = File::new(\"B_Coin.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":56,"highlight_end":76}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":7961,"byte_end":7966,"line_start":211,"line_end":211,"column_start":78,"column_end":83,"is_primary":false,"text":[{"text":"        let file = File::new(\"B_Coin.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":78,"highlight_end":83}],"label":"supplied 3 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":7903,"byte_end":7912,"line_start":211,"line_end":211,"column_start":20,"column_end":29,"is_primary":true,"text":[{"text":"        let file = File::new(\"B_Coin.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":20,"highlight_end":29}],"label":"expected 4 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/state.rs","byte_start":3409,"byte_end":3425,"line_start":71,"line_end":71,"column_start":16,"column_end":32,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":16,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3427,"byte_end":3440,"line_start":71,"line_end":71,"column_start":34,"column_end":47,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":34,"highlight_end":47}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3442,"byte_end":3454,"line_start":71,"line_end":71,"column_start":49,"column_end":61,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":49,"highlight_end":61}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3456,"byte_end":3468,"line_start":71,"line_end":71,"column_start":63,"column_end":75,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":63,"highlight_end":75}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3405,"byte_end":3408,"line_start":71,"line_end":71,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 4 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:211:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let file = File::new(\"B_Coin.jpg\".to_string(), \"anyone\".to_string(), false);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 3 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 4 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:71:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\n\n"}
{"message":"this function takes 4 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":8075,"byte_end":8099,"line_start":214,"line_end":214,"column_start":31,"column_end":55,"is_primary":false,"text":[{"text":"        let file2 = File::new(\"C_Coin.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":31,"highlight_end":55}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":8101,"byte_end":8121,"line_start":214,"line_end":214,"column_start":57,"column_end":77,"is_primary":false,"text":[{"text":"        let file2 = File::new(\"C_Coin.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":57,"highlight_end":77}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":8123,"byte_end":8128,"line_start":214,"line_end":214,"column_start":79,"column_end":84,"is_primary":false,"text":[{"text":"        let file2 = File::new(\"C_Coin.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":79,"highlight_end":84}],"label":"supplied 3 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":8065,"byte_end":8074,"line_start":214,"line_end":214,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        let file2 = File::new(\"C_Coin.jpg\".to_string(), \"anyone\".to_string(), false);","highlight_start":21,"highlight_end":30}],"label":"expected 4 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/state.rs","byte_start":3409,"byte_end":3425,"line_start":71,"line_end":71,"column_start":16,"column_end":32,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":16,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3427,"byte_end":3440,"line_start":71,"line_end":71,"column_start":34,"column_end":47,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":34,"highlight_end":47}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3442,"byte_end":3454,"line_start":71,"line_end":71,"column_start":49,"column_end":61,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":49,"highlight_end":61}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3456,"byte_end":3468,"line_start":71,"line_end":71,"column_start":63,"column_end":75,"is_primary":false,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":63,"highlight_end":75}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":3405,"byte_end":3408,"line_start":71,"line_end":71,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 4 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:214:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let file2 = File::new(\"C_Coin.jpg\".to_string(), \"anyone\".to_string(), false);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 3 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 4 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:71:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn new(contents: String, owner: String, path: String, public: bool) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\n\n"}
{"message":"unused import: `std::convert::TryInto`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/utils.rs","byte_start":74,"byte_end":95,"line_start":3,"line_end":3,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::convert::TryInto`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::convert::TryInto;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to 20 previous errors; 21 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 20 previous errors; 21 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0027, E0061, E0063, E0432, E0433, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0027, E0061, E0063, E0432, E0433, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0027`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0027`.\u001b[0m\n"}
